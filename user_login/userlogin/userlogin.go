// Code generated by goctl. DO NOT EDIT.
// Source: user_login.proto

package userlogin

import (
	"context"

	"github.com/reation/micro_service_user_service/protoc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginRequest  = protoc.LoginRequest
	LoginResponse = protoc.LoginResponse
	UserInfo      = protoc.UserInfo

	UserLogin interface {
		UserLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	}

	defaultUserLogin struct {
		cli zrpc.Client
	}
)

func NewUserLogin(cli zrpc.Client) UserLogin {
	return &defaultUserLogin{
		cli: cli,
	}
}

func (m *defaultUserLogin) UserLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := protoc.NewUserLoginClient(m.cli.Conn())
	return client.UserLogin(ctx, in, opts...)
}
