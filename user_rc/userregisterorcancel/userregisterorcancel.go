// Code generated by goctl. DO NOT EDIT.
// Source: user_register.proto

package userregisterorcancel

import (
	"context"

	"micro_service_user_service/protoc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CancelRequest    = protoc.CancelRequest
	CancelResponse   = protoc.CancelResponse
	RegisterRequest  = protoc.RegisterRequest
	RegisterResponse = protoc.RegisterResponse

	UserRegisterOrCancel interface {
		UserRegister(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		UserCancel(ctx context.Context, in *CancelRequest, opts ...grpc.CallOption) (*CancelResponse, error)
	}

	defaultUserRegisterOrCancel struct {
		cli zrpc.Client
	}
)

func NewUserRegisterOrCancel(cli zrpc.Client) UserRegisterOrCancel {
	return &defaultUserRegisterOrCancel{
		cli: cli,
	}
}

func (m *defaultUserRegisterOrCancel) UserRegister(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := protoc.NewUserRegisterOrCancelClient(m.cli.Conn())
	return client.UserRegister(ctx, in, opts...)
}

func (m *defaultUserRegisterOrCancel) UserCancel(ctx context.Context, in *CancelRequest, opts ...grpc.CallOption) (*CancelResponse, error) {
	client := protoc.NewUserRegisterOrCancelClient(m.cli.Conn())
	return client.UserCancel(ctx, in, opts...)
}
