// Code generated by goctl. DO NOT EDIT.
// Source: update_user.proto

package updateuser

import (
	"context"

	"micro_service_user_service/protoc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UpdateUserInfoRequest      = protoc.UpdateUserInfoRequest
	UpdateUserInfoResponse     = protoc.UpdateUserInfoResponse
	UpdateUserMemberRequest    = protoc.UpdateUserMemberRequest
	UpdateUserMemberResponse   = protoc.UpdateUserMemberResponse
	UpdateUserPassWordRequest  = protoc.UpdateUserPassWordRequest
	UpdateUserPassWordResponse = protoc.UpdateUserPassWordResponse

	UpdateUser interface {
		UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error)
		UpdateUserMember(ctx context.Context, in *UpdateUserMemberRequest, opts ...grpc.CallOption) (*UpdateUserMemberResponse, error)
		UpdateUserPassWord(ctx context.Context, in *UpdateUserPassWordRequest, opts ...grpc.CallOption) (*UpdateUserPassWordResponse, error)
	}

	defaultUpdateUser struct {
		cli zrpc.Client
	}
)

func NewUpdateUser(cli zrpc.Client) UpdateUser {
	return &defaultUpdateUser{
		cli: cli,
	}
}

func (m *defaultUpdateUser) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error) {
	client := protoc.NewUpdateUserClient(m.cli.Conn())
	return client.UpdateUserInfo(ctx, in, opts...)
}

func (m *defaultUpdateUser) UpdateUserMember(ctx context.Context, in *UpdateUserMemberRequest, opts ...grpc.CallOption) (*UpdateUserMemberResponse, error) {
	client := protoc.NewUpdateUserClient(m.cli.Conn())
	return client.UpdateUserMember(ctx, in, opts...)
}

func (m *defaultUpdateUser) UpdateUserPassWord(ctx context.Context, in *UpdateUserPassWordRequest, opts ...grpc.CallOption) (*UpdateUserPassWordResponse, error) {
	client := protoc.NewUpdateUserClient(m.cli.Conn())
	return client.UpdateUserPassWord(ctx, in, opts...)
}
